/*
 * \file orm.hpp
 * \author Andrew Kubera
 * \date Jan 27, 2014
 */

#ifndef ORM_HPP
#define	ORM_HPP

#include "cppdb.hpp"
#include "query/query.hpp"

#include <map>
#include <tuple>

CPPDB_NAMESPACE_BEGIN

/**
 * ORM (Object Relational Mapper)
 *
 * Class mediating data stored in database tables and useable C++ classes/objects
 */
class ORM {
public:
  /** Default Constructor */
  ORM();

  /** Copy Constructor */
  ORM(const ORM& orig);

  /** Destructor */
  virtual ~ORM();

  /** Construct a new ORM object from a row generated by a query result  */
  template <typename... Tv>
  ORM(cppdb::Row<Tv...>&);

  /** Write the object to the database */
  int save();

  /** Create table from class */
  template <typename... Tv>
  cppdb::Query<Tv...> create_table(bool if_not_exist = true);

protected:
  ORM* _orm;

  void bind(const std::string& name, void*ptr) {_field_to_ptr[name] = ptr;};

private:
  /** Field to ptr */
  std::map<std::string, void*> _field_to_ptr;

};

CPPDB_NAMESPACE_END

// include the templates
#include "orm.tcc"

#endif	/* ORM_HPP */
